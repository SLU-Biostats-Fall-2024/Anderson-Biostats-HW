---
title: "Homework 23 Chp 5 plus notes"
format: html
editor: visual
---

# GSWR 5.4-5.5

General linear models (regression, mult. regression, ANOVA, ANCOVA)

-   Common framework for estimation (least squares)

-   Common set of assumptions centered around normally distributed residuals

## Simple Linear Regression

-   Clear relationship between 2 variables that is easily visualized

-   The explanatory variable is a continuous numeric variable

Set up

```{r}
rm(list=ls())
library(tidyverse)
library(here)
```

```{r}
plant_gr <- read.csv(here("Data", "plant.growth.rate.csv"))

glimpse(plant_gr) #both columns are continuous - could plot with a scatterplot
```

```{r}
#Make a scatterplot of the data

ggplot(plant_gr, aes(x=soil.moisture.content, y=plant.growth.rate))+
  geom_point()+
  ylab("Plant Growth Rate (mm/week)")+
  theme_bw()
```

Interpretation of the scatterplot (It's good to examine data before analysis:)

-   Slope is positive

-   Slope is roughly 30/2 = **15** (get 30 from 50-20 and get 2 from 2-0 which are the ranges of the axes)

-   Intercept is roughly between 15 and 20 mm/week

-   Degrees of freedom = 48 (datapoints \[50\] - parameters \[2\])

Use lm() to fit the model

```{r}
model_pgr <- lm(plant.growth.rate ~ soil.moisture.content, data=plant_gr)

# "Fit a linear model, where we hypothesize that plant growth rate is a function of soil moisture content, using the variables from the plant_gr data frame"
```

Install ggfortify

```{r}
install.packages("ggfortify")
```

```{r}
library(ggfortify)
```

```{r}
# Use the autoplot() function which uses the linear model from lm() to create 4 plots that tell about how well model assumptions are met

autoplot(model_pgr, smooth.colour = NA)

# smooth.colour = NA used to suppress a wiggly line that is fitted by locally weighted regression
```

Interpreting the plots

-   All are based around the residuals (errors around the fitted line)

-   Residuals vs fitted –\> tells whether a line is appropriate to fit to the data (if not, will be humps/valleys)

-   Normal Q-Q -\> evaluates the assumption of normality of the residuals (the dots). dashed line is expectation under the normal distribution

-   Scale-Location -\> evaluates the assumption of equal variance. Linear models assume that the variance is constant over all predicted values of the response variable. So there should be no pattern (if there is, maybe the variance increases with the mean)

-   Residuals vs Leverage -\> evaluates leverage (tool to detect influential data points and outliers)

In our data, everything is fine - no patterns where there shouldn't be one, normal distribution assumption met, no points of high influence

[Using anova() and summary()]{.underline}

**anova()** -\> produces a **sums-of-squares table**; gives F-value for the model (ratio of variance explained by the explanatory variables to the leftover variance); gives estimate of R2 and adjusted R2

```{r}
anova(model_pgr)
```

Interpretation:

-   Large F-value (156.08) indicates that the error variance is small relative to the variance attributed to the explanatory variable

-   Large F-val(156.08) and small df(1) means very small p-value(2.2e-16)

**summary()** -\> produces a table of the estimates of the coefficients of the line that is "the model" - intercept and slope

```{r}
summary(model_pgr)
```

Interpretation:

-   The first column of the coefficients table gives the intercept (19.348) and slope (12.750) –\> these numbers are very close to the estimates made at the beginning just from looking at the scatterplot

-   T-value and p-value provide tests of whether the slope is different from 0

-   Could report: *"Soil moisture had a positive effect on plant growth. For each unit increase in soil moisture, plant growth rate increased by 12.7 mm/week (slope = 12.7, t=12.5, df = 48, p\<0.001).*

[From Stats Back to Figure]{.underline}

ggplot2 can add regression lines

```{r}
ggplot(plant_gr, aes(x = soil.moisture.content, y = plant.growth.rate)) +
  geom_point()+
  geom_smooth(method = 'lm') +
  ylab("Plant Growth Rate (mm/week)") +
  theme_bw()

#geom_smooth(method = "lm") used to add the linear-model fitted line with the standard error of the fit using flash transparent grey onto the graph
# This works well with single explanatory variable and with intial data exploration but not well with more complicated models
```
